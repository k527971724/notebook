#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <pthread.h>
#define MAXLINE 128
#define SERV_PORT 8001

void* readthread(void* arg)
{
	pthread_detach(pthread_self());
	int sockfd = (int)arg;
	int n = 0;
	char buf[MAXLINE];
	while (1)
	{
		n = read(sockfd, buf, MAXLINE);
		if (n == 0)
		{
			printf("the other side has been closed.\n");
			close(sockfd);
			exit(0);
		}
		else
		write(STDOUT_FILENO, buf, n);
	}
	return (void*)0;
}


int main(int argc, char *argv[])
{
	struct sockaddr_in servaddr;
	int sockfd;
	char buf[MAXLINE];
	//创建socket
	sockfd = socket(AF_INET, SOCK_STREAM, 0);
	
	bzero(&servaddr, sizeof(servaddr));//地址结构体全部填充0
	servaddr.sin_family = AF_INET;		//IPv4
	inet_pton(AF_INET, "127.0.0.1", &servaddr.sin_addr);//IP地址
	servaddr.sin_port = htons(SERV_PORT);//端口
	
	//连接socket
	connect(sockfd, (struct sockaddr *)&servaddr, sizeof(servaddr));
	
	pthread_t thid;
	pthread_create(&thid, NULL, readthread, (void*)sockfd);
	
	while (fgets(buf, MAXLINE, stdin) != NULL)//从标准输入读取
		write(sockfd, buf, strlen(buf));
	
	//关闭socket
	close(sockfd);
	return 0;
}